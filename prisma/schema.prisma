// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id          Int                @id @default(autoincrement())
  username    String             @unique
  password    String
  first_name  String?
  last_name   String?
  telephone   Int?
  created_at  DateTime           @default(now())
  modified_at DateTime           @updatedAt
  deleted     Boolean            @default(false)

  address     Customer_address[]
  details     Order_details?
  payments    Customer_payment[]
  sessions    Shopping_session?
  refresh_tokens Refresh_token[]
}

model Order_details {
  id          Int             @id @default(autoincrement())
  total       Int
  created_at  DateTime        @default(now())
  modified_at DateTime        @updatedAt
  deleted     Boolean         @default(false)
  items       Order_items[]

  customer    Customer        @relation(fields: [customer_id], references: [id])
  customer_id Int             @unique

  payment     Payment_details @relation(fields: [payment_id], references: [id])
  payment_id  Int             @unique

  user        User            @relation(fields: [user_id], references: [id])
  user_id     Int
}

model Order_items {
  id          Int           @id @default(autoincrement())
  quantity    Int
  created_at  DateTime      @default(now())
  modified_at DateTime      @updatedAt
  
  order       Order_details @relation(fields: [order_id], references: [id])
  order_id    Int

  product     Product       @relation(fields: [product_id], references: [id])
  product_id  Int           @unique
}

model Customer_address {
  id            Int      @id @default(autoincrement())
  address_line1 String
  address_line2 String?
  city          String?
  postal_code   String?
  country       String?
  telephone     Int?
  mobile        Int?
  
  customer      Customer? @relation(fields: [customer_id], references: [id])
  customer_id   Int?
}

model Customer_payment {
  id           Int      @id @default(autoincrement())
  payment_type String
  provider     String
  account_no   Int
  expiry       DateTime
  
  customer     Customer @relation(fields: [customer_id], references: [id])
  customer_id  Int
}

model Shopping_session {
  id          Int         @id @default(autoincrement())
  total       Decimal
  created_at  DateTime    @default(now())
  modified_at DateTime    @updatedAt
  
  items       Cart_item[]
  
  customer    Customer    @relation(fields: [customer_id], references: [id])
  customer_id Int         @unique
}

model Cart_item {
  id          Int              @id @default(autoincrement())
  quantity    Int
  created_at  DateTime         @default(now())
  modified_at DateTime         @updatedAt
  
  session     Shopping_session @relation(fields: [session_id], references: [id])
  session_id  Int
  
  product     Product          @relation(fields: [product_id], references: [id])
  product_id  Int              @unique
}

model Product {
  id          Int              @id @default(autoincrement())
  name        String?
  category    Product_category? @relation(fields: [category_id], references: [id])
  category_id Int?
  discount    Discount?         @relation(fields: [discount_id], references: [id])
  discount_id Int?
  desc        String
  SKU         String           @unique
  price       Decimal
  created_at  DateTime         @default(now())
  modified_at DateTime         @updatedAt
  deleted     Boolean          @default(false)

  inventory   Product_inventory?
  order_items Order_items?
  cart_item   Cart_item?
 
  // category    Product_category @relation(fields: [category_id], references: [id])
  // category_id Int

  // discount    Discount         @relation(fields: [discount_id], references: [id])
  // discount_id Int
}

model Product_category {
  id          Int      @id @default(autoincrement())
  name        String
  desc        String
  created_at  DateTime @default(now())
  modified_at DateTime @updatedAt
  deleted     Boolean  @default(false)

  product Product[]
}

model Product_inventory {
  id          Int      @id @default(autoincrement())
  quantity    Int
  created_at  DateTime @default(now())
  modified_at DateTime @updatedAt
  
  product     Product  @relation(fields: [product_id], references: [id])
  product_id  Int      @unique
}

model Discount {
  id               Int      @id @default(autoincrement())
  name             String?
  desc             String
  discount_percent Decimal
  active           Boolean
  created_at       DateTime @default(now())
  modified_at      DateTime @updatedAt
  deleted          Boolean  @default(false)

  product Product[]
}

model Payment_details {
  id          Int      @id @default(autoincrement())
  amount      Int
  provider    String
  status      String
  created_at  DateTime @default(now())
  modified_at DateTime @updatedAt

  details Order_details?
}

model Rol {
  id          Int      @id @default(autoincrement())
  name        String
  created_at  DateTime @default(now())
  modified_at DateTime @updatedAt
  deleted     Boolean  @default(false)

  user User[]
}

model User {
  id          Int      @id @default(autoincrement())
  username    String   @unique
  password    String
  first_name  String
  last_name   String
  telephone   Int?
  created_at  DateTime @default(now())
  modified_at DateTime @updatedAt
  deleted     Boolean  @default(false)
  
  rol         Rol      @relation(fields: [rol_id], references: [id])
  rol_id      Int

  order_details Order_details[]
}


model Refresh_token {
  id              String   @id @unique @default(uuid())
  hashed_token    String
  customer_id     Int
  customer        Customer    @relation(fields: [customer_id], references: [id])
  revoked         Boolean  @default(false)
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt
}